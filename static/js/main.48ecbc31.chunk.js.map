{"version":3,"sources":["store/index.js","components/ReadOnlyRow.js","components/EditableRow.js","App.js","reportWebVitals.js","index.js"],"names":["create","set","get","excelData","setExcelData","data","removeExcelRow","index","temp","splice","_toConsumableArray","addTableRows","ReadOnlyRow","_ref","item","handleEditClick","handleDeleteClick","React","createElement","key","type","onClick","event","EditableRow","editFormData","handleEditFormChange","handleCancelClick","placeholder","name","value","View","onChange","Section_Name","Section_Display","Section_Status","Section_Default_Open","Primitive_FallOff_Hours","Subsection_Name","Subsection_Display","Display_Association","Dynamic_Group","Primitive_EventSet_Name","Primitive_EventSet_Display","Item_Status","Assay_Display","App","_useState","useState","_useState2","_slicedToArray","setData","_useState3","_useState4","addFormData","setAddFormData","_useState5","_useState6","setEditFormData","_useState7","_useState8","columnArray","setColumn","_useState9","_useState10","setValues","_useState11","_useState12","editItemId","setEditItemId","handleAddFormChange","preventDefault","fieldName","target","getAttribute","fieldValue","newFormData","_objectSpread","formValues","newDatas","className","accpet","Papa","parse","files","header","skipEmptyLines","complete","result","valuesArray","map","d","push","Object","keys","values","style","display","margin","onSubmit","editedData","id","findIndex","col","i","Fragment","class","exportData","items","Action","Parent Unique Value","Parent Display","Move or Copy to/Existing Event Set Name","Event Set Name","Event Set Display","Event Set Description","Event Set Definition","Event Set Show No Data Ind","Event Set Display Assoc Ind","Primitive Ind","Event Set Sequence","Event Code Value","Event Code Display","Event Code Description","Event Code Definition","Event Code Class","Event Code Add Access Ind","Event Code Chg Access Ind","Mapped Proc Type","Mapped Proc Display","Mapped Proc Code Value","Charting Indicator","Errors","worksheet","XLSX","json_to_sheet","workbook","book_new","book_append_sheet","downloadExcel","newData","concat","required","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.48ecbc31.chunk.js","sourcesContent":["import {create} from \"zustand\"\r\n\r\n// const [skipPageReset, setSkipPageReset] = useState(false);\r\n\r\nconst useCounter = create((set, get) => ({\r\n\r\n        excelData: [],\r\n    \r\n        setExcelData: (data) => set({ excelData: data }),\r\n    \r\n        removeExcelRow: (index) => {\r\n    \r\n            const temp = get().excelData\r\n    \r\n            temp.splice(index, 1)\r\n    \r\n            set({ excelData : [...temp] })\r\n    \r\n        },\r\n\r\n   addTableRows : (index)=>{\r\n           const temp = get().excelData\r\n    \r\n           temp.splice(0, 0, index)\r\n    \r\n           set({ excelData : [...temp] })\r\n\r\n  }\r\n\r\n  \r\n    \r\n    }))\r\n\r\n\r\n// removeExcelRow: (index)=> set((state)=> {\r\n//     let m = state.excelData\r\n//     console.log(m.length)\r\n//     console.log(m)\r\n//     // let ddd = m.splice(index,1)\r\n//     // console.log(m.length)\r\n//     // console.log(ddd)\r\n//     return {\r\n//         ...state,\r\n//         excelData: m\r\n//     }\r\n// }) \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default useCounter","import React from \"react\";\r\n\r\nconst ReadOnlyRow = ({ item, index, handleEditClick, handleDeleteClick}) => {\r\n  return (\r\n    <tr key={index}>\r\n      <td> {item[\"View\"]}</td>\r\n            <td> {item[\"Section Name\"]}  </td>\r\n            <td> {item[\"Section_Display\"]}</td>\r\n            <td> {item[\"Section_Status\"]} </td>\r\n            <td> {item[\"Section_Default_Open\"]} </td>\r\n            <td> {item[\"Primitive_FallOff_Hours\"]} </td>\r\n            <td> {item[\"Subsection_Name\"]} </td>\r\n            <td> {item[\"Subsection_Display\"]} </td>\r\n            <td> {item[\"Display_Association\"]} </td>\r\n            <td> {item[\"Dynamic_Group\"]} </td>\r\n            <td> {item[\"Primitive_EventSet_Name\"]} </td>\r\n            <td> {item[\"Primitive_EventSet_Display\"]} </td>\r\n            <td> {item[\"Item_Status\"]}</td>\r\n            <td> {item[\"Assay_Display\"]} </td>  \r\n      <td>\r\n        <button type =\"button\" onClick={(event) => handleEditClick(event, item, index)}>Edit</button>\r\n        <button type=\"button\" onClick={() => handleDeleteClick(index)}>\r\n          Delete\r\n        </button>\r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default ReadOnlyRow;","import React from \"react\";\r\n\r\nconst EditableRow = ({ editFormData, handleEditFormChange , handleCancelClick}) => {\r\n  return (\r\n    <tr>\r\n      <td>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Enter a name...\"\r\n          name=\"View\"\r\n          value={editFormData.View}\r\n          onChange={handleEditFormChange}\r\n        ></input>\r\n      </td>\r\n      <td>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Enter an address...\"\r\n          name=\"Section_Name\"\r\n          value={editFormData.Section_Name}\r\n          onChange={handleEditFormChange}\r\n        ></input>\r\n      </td>\r\n      <td>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Enter a phone number...\"\r\n          name=\"Section_Display\"\r\n          value={editFormData.Section_Display}\r\n          onChange={handleEditFormChange}\r\n        ></input>\r\n      </td>\r\n      <td>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Enter an email...\"\r\n          name=\"Section_Status\"\r\n          value={editFormData.Section_Status}\r\n          onChange={handleEditFormChange}\r\n        ></input>\r\n      </td>\r\n      <td>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Enter an email...\"\r\n          name=\"Section_Default_Open\"\r\n          value={editFormData.Section_Default_Open}\r\n          onChange={handleEditFormChange}\r\n        ></input>\r\n      </td>\r\n      <td>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Enter an email...\"\r\n          name=\"Primitive_FallOff_Hours\"\r\n          value={editFormData.Primitive_FallOff_Hours}\r\n          onChange={handleEditFormChange}\r\n        ></input>\r\n      </td>\r\n      <td>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Enter an email...\"\r\n          name=\"Subsection_Name\"\r\n          value={editFormData.Subsection_Name}\r\n          onChange={handleEditFormChange}\r\n        ></input>\r\n      </td>\r\n      <td>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Enter an email...\"\r\n          name=\"Subsection_Display\"\r\n          value={editFormData.Subsection_Display}\r\n          onChange={handleEditFormChange}\r\n        ></input>\r\n      </td>\r\n      <td>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Enter an email...\"\r\n          name=\"Display_Association\"\r\n          value={editFormData.Display_Association}\r\n          onChange={handleEditFormChange}\r\n        ></input>\r\n      </td>\r\n      <td>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Enter an email...\"\r\n          name=\"Dynamic_Group\"\r\n          value={editFormData.Dynamic_Group}\r\n          onChange={handleEditFormChange}\r\n        ></input>\r\n      </td>\r\n      <td>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Enter an email...\"\r\n          name=\"Primitive_EventSet_Name\"\r\n          value={editFormData.Primitive_EventSet_Name}\r\n          onChange={handleEditFormChange}\r\n        ></input>\r\n      </td>\r\n      <td>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Enter an email...\"\r\n          name=\"Primitive_EventSet_Display\"\r\n          value={editFormData.Primitive_EventSet_Display}\r\n          onChange={handleEditFormChange}\r\n        ></input>\r\n      </td>\r\n      <td>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Enter an email...\"\r\n          name=\"Item_Status\"\r\n          value={editFormData.Item_Status}\r\n          onChange={handleEditFormChange}\r\n        ></input>\r\n      </td>\r\n      <td>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Enter an email...\"\r\n          name=\"Assay_Display\"\r\n          value={editFormData.Assay_Display}\r\n          onChange={handleEditFormChange}\r\n        ></input>\r\n      </td>\r\n      <td>\r\n        <button type=\"submit\">Save</button>\r\n        <button type=\"button\" onClick={handleCancelClick}>\r\n          Cancel\r\n        </button>\r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default EditableRow;","import React, { useState, Fragment } from \"react\";\nimport excelStore from \"./store\"\nimport Papa from 'papaparse'\n// import { nanoid } from \"nanoid\";\nimport \"./App.css\";\nimport ReadOnlyRow from \"./components/ReadOnlyRow\";\nimport EditableRow from \"./components/EditableRow\";\nimport * as XLSX from 'xlsx';\n\n\nconst App = () => {\n  const [data, setData] = useState([]);\n  const [addFormData, setAddFormData] = useState({\n    View: \"\",\n    Section_Name: \"\",\n    Section_Display: \"\",\n    Section_Status: \"\",\n    Section_Default_Open: \"\",\n    Primitive_FallOff_Hours: \"\",\n    Subsection_Name: \"\",\n    Subsection_Display: \"\",\n    Display_Association: \"\",\n    Dynamic_Group: \"\",\n    Primitive_EventSet_Name: \"\",\n    Primitive_EventSet_Display: \"\",\n    Item_Status: \"\",\n    Assay_Display: \"\",\n  });\n\n  const [editFormData, setEditFormData] = useState({\n    View: \"\",\n    Section_Name: \"\",\n    Section_Display: \"\",\n    Section_Status: \"\",\n    Section_Default_Open: \"\",\n    Primitive_FallOff_Hours: \"\",\n    Subsection_Name: \"\",\n    Subsection_Display: \"\",\n    Display_Association: \"\",\n    Dynamic_Group: \"\",\n    Primitive_EventSet_Name: \"\",\n    Primitive_EventSet_Display: \"\",\n    Item_Status: \"\",\n    Assay_Display: \"\",\n  });\n\n\n  const [columnArray, setColumn] = useState([]);\n  const [values,setValues] = useState([]);\n  const [editItemId, setEditItemId] = useState(null);\n\n  const downloadExcel = (data) => {\n    let exportData = data.map(items=>{\n      return {\n       \"Action\": items[\"Action\"]='ADD',\n       \"Parent Unique Value\" : items[\"Section_Name\"],\n       \"Parent Display\" : items[\"Section_Display\"],\n       \"Move or Copy to/Existing Event Set Name\" : '',\n       \"Event Set Name\" : items[\"Primitive_EventSet_Name\"],\n       \"Event Set Display\" : items[\"Primitive_EventSet_Display\"],\n       \"Event Set Description\" : items[\"Primitive_EventSet_Name\"],\n       \"Event Set Definition\" : items[\"Primitive_EventSet_Name\"],\n       \"Event Set Show No Data Ind\" : '',\n       \"Event Set Display Assoc Ind\" : '',\n       \"Primitive Ind\" : '',\n       \"Event Set Sequence\" : '',\n       \"Event Code Value\" : items[\"Assay_Display\"],\n       \"Event Code Display\" : items[\"Assay_Display\"],\n       \"Event Code Description\" : items[\"Assay_Display\"],\n       \"Event Code Definition\" : items[\"Assay_Display\"],\n       \"Event Code Class\" :'',\n       \"Event Code Add Access Ind\" : '',\n       \"Event Code Chg Access Ind\" : '',\n       \"Mapped Proc Type\" : '',\n       \"Mapped Proc Display\" : '',\n       \"Mapped Proc Code Value\" : '',\n       \"Charting Indicator\" : '',\n       \"Errors\" : '',\n      }\n    })\n    const worksheet = XLSX.utils.json_to_sheet(exportData);\n    const workbook = XLSX.utils.book_new();\n    XLSX.utils.book_append_sheet(workbook, worksheet, \"Sheet1\");\n    //let buffer = XLSX.write(workbook, { bookType: \"xlsx\", type: \"buffer\" });\n    //XLSX.write(workbook, { bookType: \"xlsx\", type: \"binary\" });\n    XLSX.writeFile(workbook, \"DataSheet.xlsx\");\n  };\n\n  const handleFile = (event) =>{\n    Papa.parse(event.target.files[0], {\n      header: true,\n      skipEmptyLines: true,\n      complete: function(result){\n        const columnArray = [];\n        const valuesArray = [];\n        result.data.map((d) => {\n          columnArray.push(Object.keys(d));\n          valuesArray.push(Object.values(d));\n        });\n        setData(result.data);\n        setColumn(columnArray[0]);\n        setValues(valuesArray);\n      }\n    })\n  };\n\n  const handleAddFormChange = (event) => {\n    event.preventDefault();\n\n    const fieldName = event.target.getAttribute(\"name\");\n    const fieldValue = event.target.value;\n\n    const newFormData = { ...addFormData };\n    newFormData[fieldName] = fieldValue;\n\n    setAddFormData(newFormData);\n  };\n\n  const handleEditFormChange =  (event) => {\n\n    const fieldName = event.target.getAttribute(\"name\");\n    const fieldValue = event.target.value;\n\n    const newFormData = { ...editFormData };\n    newFormData[fieldName] = fieldValue;\n\n    setEditFormData(newFormData);    \n  };\n\n  const handleAddFormSubmit = (event) => {\n    event.preventDefault();\n\n    const newData = {\n      // id: nanoid(),\n      View: addFormData.View,\n      Section_Name: addFormData.Section_Name,\n      Section_Display: addFormData.Section_Display,\n      Section_Status: addFormData.Section_Status,\n      Section_Default_Open: addFormData.Section_Default_Open,\n      Primitive_FallOff_Hours: addFormData.Primitive_FallOff_Hours,\n      Subsection_Name: addFormData.Subsection_Name,\n      Subsection_Display: addFormData.Subsection_Display,\n      Display_Association: addFormData.Display_Association,\n      Dynamic_Group: addFormData.Dynamic_Group,\n      Primitive_EventSet_Name: addFormData.Primitive_EventSet_Name,\n      Primitive_EventSet_Display: addFormData.Primitive_EventSet_Display,\n      Item_Status: addFormData.Item_Status,\n      Assay_Display: addFormData.Assay_Display,\n    };\n\n    const newDatas= [...data, newData];\n    setData(newDatas);\n  };\n\n  const handleEditFormSubmit = (event,item,index) => {\n    event.preventDefault();\n\n    const editedData = {\n          id : editItemId,\n          View: editFormData.View,\n          Section_Name: editFormData.Section_Name,\n          Section_Display: editFormData.Section_Display,\n          Section_Status: editFormData.Section_Status,\n          Section_Default_Open: editFormData.Section_Default_Open,\n          Primitive_FallOff_Hours: editFormData.Primitive_FallOff_Hours,\n          Subsection_Name: editFormData.Subsection_Name,\n          Subsection_Display: editFormData.Subsection_Display,\n          Display_Association: editFormData.Display_Association,\n          Dynamic_Group: editFormData.Dynamic_Group,\n          Primitive_EventSet_Name: editFormData.Primitive_EventSet_Name,\n          Primitive_EventSet_Display: editFormData.Primitive_EventSet_Display,\n          Item_Status: editFormData.Item_Status,\n          Assay_Display: editFormData.Assay_Display,\n        };\n    \n        const newDatas = [...data];\n\n        // const index1 = data.findIndex((item) => index =);\n\n        const index1 = data.findIndex((item)=> index === editItemId);\n\n        newDatas[editItemId] = editedData;\n\n        setData(newDatas);\n        setEditItemId(null);\n      \n        };\n\n  const handleEditClick = (event, item, index) => {\n    event.preventDefault();\n    setEditItemId(index);\n\n    const formValues = {\n      View: item.View,\n      Section_Name: item.Section_Name,\n      Section_Display: item.Section_Display,\n      Section_Status: item.Section_Status,\n      Section_Default_Open: item.Section_Default_Open,\n      Primitive_FallOff_Hours: item.Primitive_FallOff_Hours,\n      Subsection_Name: item.Subsection_Name,\n      Subsection_Display: item.Subsection_Display,\n      Display_Association: item.Display_Association,\n      Dynamic_Group: item.Dynamic_Group,\n      Primitive_EventSet_Name: item.Primitive_EventSet_Name,\n      Primitive_EventSet_Display: item.Primitive_EventSet_Display,\n      Item_Status: item.Item_Status,\n      Assay_Display: item.Assay_Display,\n    };\n     setEditFormData(formValues);\n  };\n\n  const handleCancelClick = () => {\n    setEditItemId(null);\n  };\n\n  const handleDeleteClick = (editItemId) => {\n    const newDatas = [...data];\n\n    // const index = contacts.findIndex((contact) => contact.id === contactId);\n\n    newDatas.splice(editItemId, 1);\n\n    setData(newDatas);\n  };\n\n\n\n  return <div className=\"app-container\">\n     <h2>IView Formatter</h2> \n  <h3> Please upload a file</h3>    \n      <input\n      type=\"file\"\n      name=\"file\"\n      accpet=\".xlsx\"\n      onChange={handleFile}\n      style={{display:\"block\", margin:\"10px auto\"}}>\n      </input>\n      <br/>\n    <form onSubmit = {handleEditFormSubmit}> \n    <table>\n      <thead>\n      <tr>\n             {columnArray.map((col, i)=> (\n               <th key={i}>{col}\n               </th>\n              // <div>{column.canFilter ? column.render('Filter') : null}</div>\n             ))}\n          </tr>\n      </thead>\n      <tbody>\n          { data.map((item, index)=> (\n          <Fragment>\n            {editItemId === index ? (\n               <EditableRow\n               editFormData={editFormData}\n               handleEditFormChange={handleEditFormChange}\n               handleCancelClick={handleCancelClick} />\n            ) : (\n              <ReadOnlyRow \n           item={item}\n           index={index}\n           key={index}\n           editItemId = {editItemId}\n           handleEditClick={handleEditClick}\n           handleDeleteClick={handleDeleteClick}/>\n            )}\n               </Fragment>\n))}\n         </tbody>\n    </table>\n    </form> \n        <div>\n        <button class=\"button\" onClick={() => downloadExcel(data)}>Export json data to excel</button>\n      </div>\n    <h2>Add a New Row</h2>\n      <form onSubmit={handleAddFormSubmit}>\n        <input\n          type=\"text\"\n          name=\"View\"\n          required=\"required\"\n          placeholder=\"Enter view name\"\n          onChange={handleAddFormChange}\n        />\n        <input\n          type=\"text\"\n          name=\"Section_Name\"\n          required=\"required\"\n          placeholder=\"Enter Section Name\"\n          onChange={handleAddFormChange}\n        />\n        <input\n          type=\"text\"\n          name=\"Section_Display\"\n          required=\"required\"\n          placeholder=\"Enter view name\"\n          onChange={handleAddFormChange}\n        />\n        <input\n          type=\"text\"\n          name=\"Section_Status\"\n          required=\"required\"\n          placeholder=\"Enter view name\"\n          onChange={handleAddFormChange}\n        />\n        <input\n          type=\"text\"\n          name=\"Section_Default_Open\"\n          required=\"required\"\n          placeholder=\"Enter view name\"\n          onChange={handleAddFormChange}\n        />\n        <input\n          type=\"text\"\n          name=\"Primitive_FallOff_Hours\"\n          required=\"required\"\n          placeholder=\"Enter view name\"\n          onChange={handleAddFormChange}\n        />\n        <input\n          type=\"text\"\n          name=\"Subsection_Name\"\n          required=\"required\"\n          placeholder=\"Enter view name\"\n          onChange={handleAddFormChange}\n        />\n        <input\n          type=\"text\"\n          name=\"Subsection_Display\"\n          required=\"required\"\n          placeholder=\"Enter view name\"\n          onChange={handleAddFormChange}\n        />\n        <input\n          type=\"text\"\n          name=\"Display_Association\"\n          required=\"required\"\n          placeholder=\"Enter view name\"\n          onChange={handleAddFormChange}\n        />\n        <input\n          type=\"text\"\n          name=\"Dynamic_Group\"\n          required=\"required\"\n          placeholder=\"Enter view name\"\n          onChange={handleAddFormChange}\n        />\n        <input\n          type=\"text\"\n          name=\"Primitive_EventSet_Name\"\n          required=\"required\"\n          placeholder=\"Enter view name\"\n          onChange={handleAddFormChange}\n        />\n        <input\n          type=\"text\"\n          name=\"Primitive_EventSet_Display\"\n          required=\"required\"\n          placeholder=\"Enter view name\"\n          onChange={handleAddFormChange}\n        />\n        <input\n          type=\"text\"\n          name=\"Item_Status\"\n          required=\"required\"\n          placeholder=\"Enter view name\"\n          onChange={handleAddFormChange}\n        />\n        <input\n          type=\"text\"\n          name=\"Assay_Display\"\n          required=\"required\"\n          placeholder=\"Enter view name\"\n          onChange={handleAddFormChange}\n        />\n        <button class=\"button\" type=\"submit\">Add</button>\n      </form>\n  </div>;\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App \n    />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}